rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own profile only
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Products: Anyone can read, only authenticated users can write
    match /products/{productId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        (request.auth.uid == resource.data.sellerId || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Services: Anyone can read, only authenticated users can write
    match /services/{serviceId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        (request.auth.uid == resource.data.freelancerId || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Orders: Allow broader access for custom order management
    match /orders/{orderId} {
      allow read, write: if true;
    }
    
    // Custom Orders: Allow authenticated users to create requests
    match /custom_orders/{orderId} {
      allow read, write: if request.auth != null;
      allow create: if request.auth != null;
    }
    
    // Featured Creators: Allow authenticated users to apply
    match /featured_creators/{creatorId} {
      allow read: if true; // Anyone can read approved featured creators
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Proposals: Allow broader access for proposal system
    match /proposals/{proposalId} {
      allow read, write: if true;
    }
    
    // Order tracking: Allow broader access for real-time tracking
    match /orderTracking/{trackingId} {
      allow read, write: if true;
    }
    
    // Shopping carts: Only cart owner can access
    match /carts/{cartId} {
      allow read, write: if request.auth != null && cartId == request.auth.uid;
    }
    
    // Chat conversations: Only participants can access
    match /conversations/{conversationId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.participants;
    }
    
    // Chat messages: Only conversation participants can access
    match /messages/{messageId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in get(/databases/$(database)/documents/conversations/$(resource.data.conversationId)).data.participants;
    }
    
    // Reviews: Anyone can read, only authenticated users can write their own
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.buyerId;
    }
    
    // Notifications: Users can only access their own notifications
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.recipientId;
      allow create: if request.auth != null;
    }
    
    // Analytics: Allow authenticated users to create analytics data
    match /analytics/{document=**} {
      allow create: if request.auth != null;
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}